/*
 * staffing
 * The Staffing REST APIs enable you to get and manage staffing information, such as jobs, job families, job profiles, supervisory organizations, worker check-ins, and job changes. The Staffing service also includes the /workers resource to access staffing information for non-terminated workers.    Related Information: - Administrator Guide: Setup Considerations: Job Changes
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ERRORMODELREFERENCE;
import com.konfigthis.client.model.JobData1bfa8925c50510000ae4479925510026;
import com.konfigthis.client.model.JobWorkspaceData1005157e3d631000144205466a6c13d3;
import com.konfigthis.client.model.JobsGetCollectionResponse;
import com.konfigthis.client.model.JobsGetWorkspacesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private static JobsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new JobsApi(apiClient);
    }

    /**
     * Retrieves a collection of jobs.
     *
     * Retrieves a collection of jobs.  Secured by: Worker Position: View  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCollectionTest() throws ApiException {
        Long limit = null;
        Long offset = null;
        JobsGetCollectionResponse response = api.getCollection()
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a single job instance.
     *
     * Retrieves a job with the specified job ID.  Secured by: Worker Position: View  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJobByIdTest() throws ApiException {
        String ID = null;
        JobData1bfa8925c50510000ae4479925510026 response = api.getJobById(ID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a single workspace instance.
     *
     * Retrieves a single workspace for the specified job ID.  Secured by: Worker Data: Public Worker Reports  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceTest() throws ApiException {
        String ID = null;
        String subresourceID = null;
        JobWorkspaceData1005157e3d631000144205466a6c13d3 response = api.getWorkspace(ID, subresourceID)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieves a collection of workspaces for the specified job ID.
     *
     * Retrieves a collection of workspaces for the specified job ID.  Secured by: Worker Data: Public Worker Reports  Scope: Staffing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspacesTest() throws ApiException {
        String ID = null;
        Long limit = null;
        Long offset = null;
        JobsGetWorkspacesResponse response = api.getWorkspaces(ID)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

}
