/*
 * staffing
 * The Staffing REST APIs enable you to get and manage staffing information, such as jobs, job families, job profiles, supervisory organizations, worker check-ins, and job changes. The Staffing service also includes the /workers resource to access staffing information for non-terminated workers.    Related Information: - Administrator Guide: Setup Considerations: Job Changes
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MANAGERS = "managers";
  @SerializedName(SERIALIZED_NAME_MANAGERS)
  private List<ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027> managers = null;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_INACTIVE = "inactive";
  @SerializedName(SERIALIZED_NAME_INACTIVE)
  private Boolean inactive;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTOR = "descriptor";
  @SerializedName(SERIALIZED_NAME_DESCRIPTOR)
  private String descriptor;

  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018() {
  }

  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Returns the name of the organization as of the processing effective moment
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sample Organization Name", value = "Returns the name of the organization as of the processing effective moment")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 managers(List<ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027> managers) {
    
    
    
    
    this.managers = managers;
    return this;
  }

  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 addManagersItem(ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027 managersItem) {
    if (this.managers == null) {
      this.managers = new ArrayList<>();
    }
    this.managers.add(managersItem);
    return this;
  }

   /**
   * The manager(s) for the supervisory organization.
   * @return managers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The manager(s) for the supervisory organization.")

  public List<ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027> getManagers() {
    return managers;
  }


  public void setManagers(List<ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027> managers) {
    
    
    
    this.managers = managers;
  }


  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * The organization id for the organization.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sample-Code", value = "The organization id for the organization.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 inactive(Boolean inactive) {
    
    
    
    
    this.inactive = inactive;
    return this;
  }

   /**
   * Indicates whether the organization is inactive
   * @return inactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the organization is inactive")

  public Boolean getInactive() {
    return inactive;
  }


  public void setInactive(Boolean inactive) {
    
    
    
    this.inactive = inactive;
  }


  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Id of the instance
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the instance")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 descriptor(String descriptor) {
    
    
    
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * A preview of the instance
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum dolor sit ame", value = "A preview of the instance")

  public String getDescriptor() {
    return descriptor;
  }


  public void setDescriptor(String descriptor) {
    
    
    
    this.descriptor = descriptor;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 instance itself
   */
  public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 = (SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018) o;
    return Objects.equals(this.name, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.name) &&
        Objects.equals(this.managers, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.managers) &&
        Objects.equals(this.code, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.code) &&
        Objects.equals(this.inactive, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.inactive) &&
        Objects.equals(this.id, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.id) &&
        Objects.equals(this.descriptor, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.descriptor)&&
        Objects.equals(this.additionalProperties, supervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, managers, code, inactive, id, descriptor, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    managers: ").append(toIndentedString(managers)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("managers");
    openapiFields.add("code");
    openapiFields.add("inactive");
    openapiFields.add("id");
    openapiFields.add("descriptor");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 is not found in the empty JSON string", SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("managers") != null && !jsonObj.get("managers").isJsonNull()) {
        JsonArray jsonArraymanagers = jsonObj.getAsJsonArray("managers");
        if (jsonArraymanagers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("managers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `managers` to be an array in the JSON string but got `%s`", jsonObj.get("managers").toString()));
          }

          // validate the optional field `managers` (array)
          for (int i = 0; i < jsonArraymanagers.size(); i++) {
            ManagerWorkerViewA02c2e1916fa10000cbb84be81ce0027.validateJsonObject(jsonArraymanagers.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("descriptor") != null && !jsonObj.get("descriptor").isJsonNull()) && !jsonObj.get("descriptor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descriptor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descriptor").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.class));

       return (TypeAdapter<T>) new TypeAdapter<SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018>() {
           @Override
           public void write(JsonWriter out, SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018
  * @throws IOException if the JSON string is invalid with respect to SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018
  */
  public static SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018.class);
  }

 /**
  * Convert an instance of SupervisoryOrganizationViewA02c2e1916fa100009e137235f1f0018 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

