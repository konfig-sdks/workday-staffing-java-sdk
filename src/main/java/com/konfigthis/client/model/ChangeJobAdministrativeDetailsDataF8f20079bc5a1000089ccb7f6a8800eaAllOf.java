/*
 * staffing
 * The Staffing REST APIs enable you to get and manage staffing information, such as jobs, job families, job profiles, supervisory organizations, worker check-ins, and job changes. The Staffing service also includes the /workers resource to access staffing information for non-terminated workers.    Related Information: - Administrator Guide: Setup Considerations: Job Changes
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.AssignmentType23929e1f68ca10000d6940d6bde56963;
import com.konfigthis.client.model.ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137;
import com.konfigthis.client.model.PayRateTypeD25283821c01100016756a14eb650000;
import com.konfigthis.client.model.PositionWorkerType05d4c45042b610001030ee47f2c90118;
import com.konfigthis.client.model.TimeType05d4c45042b610000bb540b7458e0108;
import com.konfigthis.client.model.WorkStudy05d4c45042b610000ba2f83c70f30101;
import com.konfigthis.client.model.WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf {
  public static final String SERIALIZED_NAME_PAY_RATE_TYPE = "payRateType";
  @SerializedName(SERIALIZED_NAME_PAY_RATE_TYPE)
  private PayRateTypeD25283821c01100016756a14eb650000 payRateType;

  public static final String SERIALIZED_NAME_WORKERS_COMPENSATION_CODE_OVERRIDE = "workersCompensationCodeOverride";
  @SerializedName(SERIALIZED_NAME_WORKERS_COMPENSATION_CODE_OVERRIDE)
  private WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f workersCompensationCodeOverride;

  public static final String SERIALIZED_NAME_FTE = "fte";
  @SerializedName(SERIALIZED_NAME_FTE)
  private Integer fte;

  public static final String SERIALIZED_NAME_NOTIFY_BY = "notifyBy";
  @SerializedName(SERIALIZED_NAME_NOTIFY_BY)
  private LocalDate notifyBy;

  public static final String SERIALIZED_NAME_COMPANY_INSIDER_TYPES = "companyInsiderTypes";
  @SerializedName(SERIALIZED_NAME_COMPANY_INSIDER_TYPES)
  private List<ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137> companyInsiderTypes = null;

  public static final String SERIALIZED_NAME_FIRST_DAY_OF_WORK = "firstDayOfWork";
  @SerializedName(SERIALIZED_NAME_FIRST_DAY_OF_WORK)
  private LocalDate firstDayOfWork;

  public static final String SERIALIZED_NAME_DEFAULT_WEEKLY_HOURS = "defaultWeeklyHours";
  @SerializedName(SERIALIZED_NAME_DEFAULT_WEEKLY_HOURS)
  private Integer defaultWeeklyHours;

  public static final String SERIALIZED_NAME_POSITION_WORKER_TYPE = "positionWorkerType";
  @SerializedName(SERIALIZED_NAME_POSITION_WORKER_TYPE)
  private PositionWorkerType05d4c45042b610001030ee47f2c90118 positionWorkerType;

  public static final String SERIALIZED_NAME_WORKING_FTE = "workingFte";
  @SerializedName(SERIALIZED_NAME_WORKING_FTE)
  private Integer workingFte;

  public static final String SERIALIZED_NAME_SPECIFY_WORKING_FTE = "specifyWorkingFte";
  @SerializedName(SERIALIZED_NAME_SPECIFY_WORKING_FTE)
  private Boolean specifyWorkingFte;

  public static final String SERIALIZED_NAME_TIME_TYPE = "timeType";
  @SerializedName(SERIALIZED_NAME_TIME_TYPE)
  private TimeType05d4c45042b610000bb540b7458e0108 timeType;

  public static final String SERIALIZED_NAME_SPECIFY_PAID_FTE = "specifyPaidFte";
  @SerializedName(SERIALIZED_NAME_SPECIFY_PAID_FTE)
  private Boolean specifyPaidFte;

  public static final String SERIALIZED_NAME_PAID_FTE = "paidFte";
  @SerializedName(SERIALIZED_NAME_PAID_FTE)
  private Integer paidFte;

  public static final String SERIALIZED_NAME_WORK_STUDY = "workStudy";
  @SerializedName(SERIALIZED_NAME_WORK_STUDY)
  private WorkStudy05d4c45042b610000ba2f83c70f30101 workStudy;

  public static final String SERIALIZED_NAME_ASSIGNMENT_TYPE = "assignmentType";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_TYPE)
  private AssignmentType23929e1f68ca10000d6940d6bde56963 assignmentType;

  public static final String SERIALIZED_NAME_END_EMPLOYMENT_DATE = "endEmploymentDate";
  @SerializedName(SERIALIZED_NAME_END_EMPLOYMENT_DATE)
  private LocalDate endEmploymentDate;

  public static final String SERIALIZED_NAME_EXPECTED_ASSIGNMENT_END_DATE = "expectedAssignmentEndDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_ASSIGNMENT_END_DATE)
  private LocalDate expectedAssignmentEndDate;

  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf() {
  }

  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf payRateType(PayRateTypeD25283821c01100016756a14eb650000 payRateType) {
    
    
    
    
    this.payRateType = payRateType;
    return this;
  }

   /**
   * Get payRateType
   * @return payRateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PayRateTypeD25283821c01100016756a14eb650000 getPayRateType() {
    return payRateType;
  }


  public void setPayRateType(PayRateTypeD25283821c01100016756a14eb650000 payRateType) {
    
    
    
    this.payRateType = payRateType;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf workersCompensationCodeOverride(WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f workersCompensationCodeOverride) {
    
    
    
    
    this.workersCompensationCodeOverride = workersCompensationCodeOverride;
    return this;
  }

   /**
   * Get workersCompensationCodeOverride
   * @return workersCompensationCodeOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f getWorkersCompensationCodeOverride() {
    return workersCompensationCodeOverride;
  }


  public void setWorkersCompensationCodeOverride(WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f workersCompensationCodeOverride) {
    
    
    
    this.workersCompensationCodeOverride = workersCompensationCodeOverride;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf fte(Integer fte) {
    
    
    
    
    this.fte = fte;
    return this;
  }

   /**
   * Full Time Equivalent for a worker calculated by scheduled weekly hours divided by default weekly hours either current or proposed.
   * @return fte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "Full Time Equivalent for a worker calculated by scheduled weekly hours divided by default weekly hours either current or proposed.")

  public Integer getFte() {
    return fte;
  }


  public void setFte(Integer fte) {
    
    
    
    this.fte = fte;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf notifyBy(LocalDate notifyBy) {
    
    
    
    
    this.notifyBy = notifyBy;
    return this;
  }

   /**
   * Returns the date that the employee should be notified for a termination.
   * @return notifyBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns the date that the employee should be notified for a termination.")

  public LocalDate getNotifyBy() {
    return notifyBy;
  }


  public void setNotifyBy(LocalDate notifyBy) {
    
    
    
    this.notifyBy = notifyBy;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf companyInsiderTypes(List<ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137> companyInsiderTypes) {
    
    
    
    
    this.companyInsiderTypes = companyInsiderTypes;
    return this;
  }

  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf addCompanyInsiderTypesItem(ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137 companyInsiderTypesItem) {
    if (this.companyInsiderTypes == null) {
      this.companyInsiderTypes = new ArrayList<>();
    }
    this.companyInsiderTypes.add(companyInsiderTypesItem);
    return this;
  }

   /**
   * The new company insider types for the worker as of the effective date.
   * @return companyInsiderTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new company insider types for the worker as of the effective date.")

  public List<ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137> getCompanyInsiderTypes() {
    return companyInsiderTypes;
  }


  public void setCompanyInsiderTypes(List<ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137> companyInsiderTypes) {
    
    
    
    this.companyInsiderTypes = companyInsiderTypes;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf firstDayOfWork(LocalDate firstDayOfWork) {
    
    
    
    
    this.firstDayOfWork = firstDayOfWork;
    return this;
  }

   /**
   * The first day of work for the worker, as specified on the Hire, Add International Assignment, or Add Job transaction. This field will not return a value for any other transaction.
   * @return firstDayOfWork
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The first day of work for the worker, as specified on the Hire, Add International Assignment, or Add Job transaction. This field will not return a value for any other transaction.")

  public LocalDate getFirstDayOfWork() {
    return firstDayOfWork;
  }


  public void setFirstDayOfWork(LocalDate firstDayOfWork) {
    
    
    
    this.firstDayOfWork = firstDayOfWork;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf defaultWeeklyHours(Integer defaultWeeklyHours) {
    
    
    
    
    this.defaultWeeklyHours = defaultWeeklyHours;
    return this;
  }

   /**
   * The new default weekly hours for the worker as of the effective date.
   * @return defaultWeeklyHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "The new default weekly hours for the worker as of the effective date.")

  public Integer getDefaultWeeklyHours() {
    return defaultWeeklyHours;
  }


  public void setDefaultWeeklyHours(Integer defaultWeeklyHours) {
    
    
    
    this.defaultWeeklyHours = defaultWeeklyHours;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf positionWorkerType(PositionWorkerType05d4c45042b610001030ee47f2c90118 positionWorkerType) {
    
    
    
    
    this.positionWorkerType = positionWorkerType;
    return this;
  }

   /**
   * Get positionWorkerType
   * @return positionWorkerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionWorkerType05d4c45042b610001030ee47f2c90118 getPositionWorkerType() {
    return positionWorkerType;
  }


  public void setPositionWorkerType(PositionWorkerType05d4c45042b610001030ee47f2c90118 positionWorkerType) {
    
    
    
    this.positionWorkerType = positionWorkerType;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf workingFte(Integer workingFte) {
    
    
    
    
    this.workingFte = workingFte;
    return this;
  }

   /**
   * The working full time equivalent for the worker as of the effective date.
   * @return workingFte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "The working full time equivalent for the worker as of the effective date.")

  public Integer getWorkingFte() {
    return workingFte;
  }


  public void setWorkingFte(Integer workingFte) {
    
    
    
    this.workingFte = workingFte;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf specifyWorkingFte(Boolean specifyWorkingFte) {
    
    
    
    
    this.specifyWorkingFte = specifyWorkingFte;
    return this;
  }

   /**
   * True if working full time equivalent is specified on a worker as of the effective date.
   * @return specifyWorkingFte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "True if working full time equivalent is specified on a worker as of the effective date.")

  public Boolean getSpecifyWorkingFte() {
    return specifyWorkingFte;
  }


  public void setSpecifyWorkingFte(Boolean specifyWorkingFte) {
    
    
    
    this.specifyWorkingFte = specifyWorkingFte;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf timeType(TimeType05d4c45042b610000bb540b7458e0108 timeType) {
    
    
    
    
    this.timeType = timeType;
    return this;
  }

   /**
   * Get timeType
   * @return timeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimeType05d4c45042b610000bb540b7458e0108 getTimeType() {
    return timeType;
  }


  public void setTimeType(TimeType05d4c45042b610000bb540b7458e0108 timeType) {
    
    
    
    this.timeType = timeType;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf specifyPaidFte(Boolean specifyPaidFte) {
    
    
    
    
    this.specifyPaidFte = specifyPaidFte;
    return this;
  }

   /**
   * True if paid full time equivalent is specified on a worker as of the effective date.
   * @return specifyPaidFte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "True if paid full time equivalent is specified on a worker as of the effective date.")

  public Boolean getSpecifyPaidFte() {
    return specifyPaidFte;
  }


  public void setSpecifyPaidFte(Boolean specifyPaidFte) {
    
    
    
    this.specifyPaidFte = specifyPaidFte;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf paidFte(Integer paidFte) {
    
    
    
    
    this.paidFte = paidFte;
    return this;
  }

   /**
   * The paid full time equivalent for the worker as of the effective date.
   * @return paidFte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "The paid full time equivalent for the worker as of the effective date.")

  public Integer getPaidFte() {
    return paidFte;
  }


  public void setPaidFte(Integer paidFte) {
    
    
    
    this.paidFte = paidFte;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf workStudy(WorkStudy05d4c45042b610000ba2f83c70f30101 workStudy) {
    
    
    
    
    this.workStudy = workStudy;
    return this;
  }

   /**
   * Get workStudy
   * @return workStudy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkStudy05d4c45042b610000ba2f83c70f30101 getWorkStudy() {
    return workStudy;
  }


  public void setWorkStudy(WorkStudy05d4c45042b610000ba2f83c70f30101 workStudy) {
    
    
    
    this.workStudy = workStudy;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf assignmentType(AssignmentType23929e1f68ca10000d6940d6bde56963 assignmentType) {
    
    
    
    
    this.assignmentType = assignmentType;
    return this;
  }

   /**
   * Get assignmentType
   * @return assignmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AssignmentType23929e1f68ca10000d6940d6bde56963 getAssignmentType() {
    return assignmentType;
  }


  public void setAssignmentType(AssignmentType23929e1f68ca10000d6940d6bde56963 assignmentType) {
    
    
    
    this.assignmentType = assignmentType;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf endEmploymentDate(LocalDate endEmploymentDate) {
    
    
    
    
    this.endEmploymentDate = endEmploymentDate;
    return this;
  }

   /**
   * The new End Employment Date for the worker. If the worker has an Employee Contract sub event, this field will return that end date instead.
   * @return endEmploymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new End Employment Date for the worker. If the worker has an Employee Contract sub event, this field will return that end date instead.")

  public LocalDate getEndEmploymentDate() {
    return endEmploymentDate;
  }


  public void setEndEmploymentDate(LocalDate endEmploymentDate) {
    
    
    
    this.endEmploymentDate = endEmploymentDate;
  }


  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf expectedAssignmentEndDate(LocalDate expectedAssignmentEndDate) {
    
    
    
    
    this.expectedAssignmentEndDate = expectedAssignmentEndDate;
    return this;
  }

   /**
   * For a past or current business process, the value of the Expected Assignment End Date field that is being (or was) proposed in the process.
   * @return expectedAssignmentEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For a past or current business process, the value of the Expected Assignment End Date field that is being (or was) proposed in the process.")

  public LocalDate getExpectedAssignmentEndDate() {
    return expectedAssignmentEndDate;
  }


  public void setExpectedAssignmentEndDate(LocalDate expectedAssignmentEndDate) {
    
    
    
    this.expectedAssignmentEndDate = expectedAssignmentEndDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf instance itself
   */
  public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf = (ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf) o;
    return Objects.equals(this.payRateType, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.payRateType) &&
        Objects.equals(this.workersCompensationCodeOverride, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.workersCompensationCodeOverride) &&
        Objects.equals(this.fte, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.fte) &&
        Objects.equals(this.notifyBy, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.notifyBy) &&
        Objects.equals(this.companyInsiderTypes, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.companyInsiderTypes) &&
        Objects.equals(this.firstDayOfWork, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.firstDayOfWork) &&
        Objects.equals(this.defaultWeeklyHours, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.defaultWeeklyHours) &&
        Objects.equals(this.positionWorkerType, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.positionWorkerType) &&
        Objects.equals(this.workingFte, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.workingFte) &&
        Objects.equals(this.specifyWorkingFte, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.specifyWorkingFte) &&
        Objects.equals(this.timeType, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.timeType) &&
        Objects.equals(this.specifyPaidFte, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.specifyPaidFte) &&
        Objects.equals(this.paidFte, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.paidFte) &&
        Objects.equals(this.workStudy, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.workStudy) &&
        Objects.equals(this.assignmentType, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.assignmentType) &&
        Objects.equals(this.endEmploymentDate, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.endEmploymentDate) &&
        Objects.equals(this.expectedAssignmentEndDate, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.expectedAssignmentEndDate)&&
        Objects.equals(this.additionalProperties, changeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payRateType, workersCompensationCodeOverride, fte, notifyBy, companyInsiderTypes, firstDayOfWork, defaultWeeklyHours, positionWorkerType, workingFte, specifyWorkingFte, timeType, specifyPaidFte, paidFte, workStudy, assignmentType, endEmploymentDate, expectedAssignmentEndDate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf {\n");
    sb.append("    payRateType: ").append(toIndentedString(payRateType)).append("\n");
    sb.append("    workersCompensationCodeOverride: ").append(toIndentedString(workersCompensationCodeOverride)).append("\n");
    sb.append("    fte: ").append(toIndentedString(fte)).append("\n");
    sb.append("    notifyBy: ").append(toIndentedString(notifyBy)).append("\n");
    sb.append("    companyInsiderTypes: ").append(toIndentedString(companyInsiderTypes)).append("\n");
    sb.append("    firstDayOfWork: ").append(toIndentedString(firstDayOfWork)).append("\n");
    sb.append("    defaultWeeklyHours: ").append(toIndentedString(defaultWeeklyHours)).append("\n");
    sb.append("    positionWorkerType: ").append(toIndentedString(positionWorkerType)).append("\n");
    sb.append("    workingFte: ").append(toIndentedString(workingFte)).append("\n");
    sb.append("    specifyWorkingFte: ").append(toIndentedString(specifyWorkingFte)).append("\n");
    sb.append("    timeType: ").append(toIndentedString(timeType)).append("\n");
    sb.append("    specifyPaidFte: ").append(toIndentedString(specifyPaidFte)).append("\n");
    sb.append("    paidFte: ").append(toIndentedString(paidFte)).append("\n");
    sb.append("    workStudy: ").append(toIndentedString(workStudy)).append("\n");
    sb.append("    assignmentType: ").append(toIndentedString(assignmentType)).append("\n");
    sb.append("    endEmploymentDate: ").append(toIndentedString(endEmploymentDate)).append("\n");
    sb.append("    expectedAssignmentEndDate: ").append(toIndentedString(expectedAssignmentEndDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("payRateType");
    openapiFields.add("workersCompensationCodeOverride");
    openapiFields.add("fte");
    openapiFields.add("notifyBy");
    openapiFields.add("companyInsiderTypes");
    openapiFields.add("firstDayOfWork");
    openapiFields.add("defaultWeeklyHours");
    openapiFields.add("positionWorkerType");
    openapiFields.add("workingFte");
    openapiFields.add("specifyWorkingFte");
    openapiFields.add("timeType");
    openapiFields.add("specifyPaidFte");
    openapiFields.add("paidFte");
    openapiFields.add("workStudy");
    openapiFields.add("assignmentType");
    openapiFields.add("endEmploymentDate");
    openapiFields.add("expectedAssignmentEndDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf is not found in the empty JSON string", ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `payRateType`
      if (jsonObj.get("payRateType") != null && !jsonObj.get("payRateType").isJsonNull()) {
        PayRateTypeD25283821c01100016756a14eb650000.validateJsonObject(jsonObj.getAsJsonObject("payRateType"));
      }
      // validate the optional field `workersCompensationCodeOverride`
      if (jsonObj.get("workersCompensationCodeOverride") != null && !jsonObj.get("workersCompensationCodeOverride").isJsonNull()) {
        WorkersCompensationCodeOverride05d4c45042b61000138500e185e0013f.validateJsonObject(jsonObj.getAsJsonObject("workersCompensationCodeOverride"));
      }
      if (jsonObj.get("companyInsiderTypes") != null && !jsonObj.get("companyInsiderTypes").isJsonNull()) {
        JsonArray jsonArraycompanyInsiderTypes = jsonObj.getAsJsonArray("companyInsiderTypes");
        if (jsonArraycompanyInsiderTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("companyInsiderTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `companyInsiderTypes` to be an array in the JSON string but got `%s`", jsonObj.get("companyInsiderTypes").toString()));
          }

          // validate the optional field `companyInsiderTypes` (array)
          for (int i = 0; i < jsonArraycompanyInsiderTypes.size(); i++) {
            ChangeJobCompanyInsiderTypesData05d4c45042b61000131e4b2132f30137.validateJsonObject(jsonArraycompanyInsiderTypes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `positionWorkerType`
      if (jsonObj.get("positionWorkerType") != null && !jsonObj.get("positionWorkerType").isJsonNull()) {
        PositionWorkerType05d4c45042b610001030ee47f2c90118.validateJsonObject(jsonObj.getAsJsonObject("positionWorkerType"));
      }
      // validate the optional field `timeType`
      if (jsonObj.get("timeType") != null && !jsonObj.get("timeType").isJsonNull()) {
        TimeType05d4c45042b610000bb540b7458e0108.validateJsonObject(jsonObj.getAsJsonObject("timeType"));
      }
      // validate the optional field `workStudy`
      if (jsonObj.get("workStudy") != null && !jsonObj.get("workStudy").isJsonNull()) {
        WorkStudy05d4c45042b610000ba2f83c70f30101.validateJsonObject(jsonObj.getAsJsonObject("workStudy"));
      }
      // validate the optional field `assignmentType`
      if (jsonObj.get("assignmentType") != null && !jsonObj.get("assignmentType").isJsonNull()) {
        AssignmentType23929e1f68ca10000d6940d6bde56963.validateJsonObject(jsonObj.getAsJsonObject("assignmentType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf>() {
           @Override
           public void write(JsonWriter out, ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf
  * @throws IOException if the JSON string is invalid with respect to ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf
  */
  public static ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf.class);
  }

 /**
  * Convert an instance of ChangeJobAdministrativeDetailsDataF8f20079bc5a1000089ccb7f6a8800eaAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

