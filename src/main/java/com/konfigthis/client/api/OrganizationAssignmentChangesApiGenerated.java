/*
 * staffing
 * The Staffing REST APIs enable you to get and manage staffing information, such as jobs, job families, job profiles, supervisory organizations, worker check-ins, and job changes. The Staffing service also includes the /workers resource to access staffing information for non-terminated workers.    Related Information: - Administrator Guide: Setup Considerations: Job Changes
 *
 * The version of the OpenAPI document: v6
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.BusinessProcessParameters23782ad3f54110002073aab65def00fb;
import com.konfigthis.client.model.BusinessUnit5aabf8e28cb310002520b2aabc470366;
import com.konfigthis.client.model.ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff;
import com.konfigthis.client.model.Comments7d98fd55aeee100022968e52a1b31c60;
import com.konfigthis.client.model.Company56fe0dd0eca1100019cfe097d26a03f2;
import com.konfigthis.client.model.CostCenter5aabf8e28cb3100010a999f40b07024f;
import com.konfigthis.client.model.CustomOrganizationDetails3950e273020a100017857926d35d369c;
import com.konfigthis.client.model.ERRORMODELREFERENCE;
import com.konfigthis.client.model.EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1;
import com.konfigthis.client.model.FundA18edb56aca0100014a4a0b27352045c;
import com.konfigthis.client.model.GiftA18edb56aca0100014a4a0a9f876045b;
import com.konfigthis.client.model.GrantA18edb56aca0100014a4a0bcf25c045e;
import java.time.LocalDate;
import com.konfigthis.client.model.MassActionHeaderCf97466f96d910002bd32afbf0000001;
import com.konfigthis.client.model.MassActionWorksheet31485c9a93c0100007276cf4e5640000;
import com.konfigthis.client.model.OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365;
import com.konfigthis.client.model.OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354;
import com.konfigthis.client.model.OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e;
import com.konfigthis.client.model.OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a;
import com.konfigthis.client.model.OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetBusinessUnitResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetCommentResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetCompanyResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetCostCenterResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetCostingOrganizationsResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetCustomOrganizationsResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetRegionResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesGetStartDetailsResponse;
import com.konfigthis.client.model.OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000;
import com.konfigthis.client.model.OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373;
import com.konfigthis.client.model.OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b;
import com.konfigthis.client.model.Position827372de4457100019c0e9c5977d0000;
import com.konfigthis.client.model.PositionCf97466f96d9100029bffcf91c120001;
import com.konfigthis.client.model.ProgramA18edb56aca0100014a4a0b7ddf7045d;
import com.konfigthis.client.model.RegionA18edb56aca0100006997ec7e07d0374;
import com.konfigthis.client.model.SupervisoryOrganization827372de445710001cfe36968a480000;
import com.konfigthis.client.model.Worker90009f2bfc4910001b166d44a72c0727;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class OrganizationAssignmentChangesApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OrganizationAssignmentChangesApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public OrganizationAssignmentChangesApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call createChangeEventCall(OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createChangeEventValidateBeforeCall(OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000' is set
        if (organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000' when calling createChangeEvent(Async)");
        }

        return createChangeEventCall(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000> createChangeEventWithHttpInfo(OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000) throws ApiException {
        okhttp3.Call localVarCall = createChangeEventValidateBeforeCall(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call createChangeEventAsync(OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, final ApiCallback<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000> _callback) throws ApiException {

        okhttp3.Call localVarCall = createChangeEventValidateBeforeCall(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class CreateChangeEventRequestBuilder {
        private PositionCf97466f96d9100029bffcf91c120001 position;
        private MassActionWorksheet31485c9a93c0100007276cf4e5640000 massActionWorksheet;
        private MassActionHeaderCf97466f96d910002bd32afbf0000001 massActionHeader;
        private LocalDate date;
        private String id;
        private String descriptor;

        private CreateChangeEventRequestBuilder() {
        }

        /**
         * Set position
         * @param position  (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder position(PositionCf97466f96d9100029bffcf91c120001 position) {
            this.position = position;
            return this;
        }
        
        /**
         * Set massActionWorksheet
         * @param massActionWorksheet  (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder massActionWorksheet(MassActionWorksheet31485c9a93c0100007276cf4e5640000 massActionWorksheet) {
            this.massActionWorksheet = massActionWorksheet;
            return this;
        }
        
        /**
         * Set massActionHeader
         * @param massActionHeader  (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder massActionHeader(MassActionHeaderCf97466f96d910002bd32afbf0000001 massActionHeader) {
            this.massActionHeader = massActionHeader;
            return this;
        }
        
        /**
         * Set date
         * @param date The effective date of the business process event using the yyyy-mm-dd format. (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder date(LocalDate date) {
            this.date = date;
            return this;
        }
        
        /**
         * Set id
         * @param id Id of the instance (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder id(String id) {
            this.id = id;
            return this;
        }
        
        /**
         * Set descriptor
         * @param descriptor A preview of the instance (optional)
         * @return CreateChangeEventRequestBuilder
         */
        public CreateChangeEventRequestBuilder descriptor(String descriptor) {
            this.descriptor = descriptor;
            return this;
        }
        
        /**
         * Build call for createChangeEvent
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 = buildBodyParams();
            return createChangeEventCall(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, _callback);
        }

        private OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 buildBodyParams() {
            OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 = new OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000();
            return organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000;
        }

        /**
         * Execute createChangeEvent request
         * @return OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 execute() throws ApiException {
            OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000> localVarResp = createChangeEventWithHttpInfo(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute createChangeEvent request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 = buildBodyParams();
            return createChangeEventWithHttpInfo(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000);
        }

        /**
         * Execute createChangeEvent request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000> _callback) throws ApiException {
            OrganizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000 = buildBodyParams();
            return createChangeEventAsync(organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000, _callback);
        }
    }

    /**
     * Creates a new change organization assignment event for a specific filled or unfilled position.
     * Creates a new change organization assignment event for a specific filled or unfilled position, which returns a new change organization assignment ID. Specify the new ID in subsequent requests that update or get information about the change organization assignment event.  In the request body, specify at least this required field: date, job {id}.\&quot;  Secured by: Change Organization Assignment (REST)  Scope: Organizations and Roles
     * @param organizationAssignmentChangesPostPositionCf97466f96d9100029bffcf91c120000  (required)
     * @return CreateChangeEventRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public CreateChangeEventRequestBuilder createChangeEvent() throws IllegalArgumentException {
        return new CreateChangeEventRequestBuilder();
    }
    private okhttp3.Call getBusinessUnitCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/businessUnit/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getBusinessUnitValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getBusinessUnit(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getBusinessUnit(Async)");
        }

        return getBusinessUnitCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> getBusinessUnitWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getBusinessUnitValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getBusinessUnitAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> _callback) throws ApiException {

        okhttp3.Call localVarCall = getBusinessUnitValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetBusinessUnitRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetBusinessUnitRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getBusinessUnit
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getBusinessUnitCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getBusinessUnit request
         * @return OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> localVarResp = getBusinessUnitWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getBusinessUnit request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> executeWithHttpInfo() throws ApiException {
            return getBusinessUnitWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getBusinessUnit request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> _callback) throws ApiException {
            return getBusinessUnitAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves a business unit for the specified organization assignment change ID.
     * Retrieves a business unit for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Business Unit  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetBusinessUnitRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetBusinessUnitRequestBuilder getBusinessUnit(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetBusinessUnitRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getBusinessUnit_0Call(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/businessUnit"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getBusinessUnit_0ValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getBusinessUnit_0(Async)");
        }

        return getBusinessUnit_0Call(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetBusinessUnitResponse> getBusinessUnit_0WithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getBusinessUnit_0ValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetBusinessUnitResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getBusinessUnit_0Async(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetBusinessUnitResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getBusinessUnit_0ValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetBusinessUnitResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetBusinessUnit0RequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetBusinessUnit0RequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetBusinessUnit0RequestBuilder
         */
        public GetBusinessUnit0RequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetBusinessUnit0RequestBuilder
         */
        public GetBusinessUnit0RequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getBusinessUnit_0
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getBusinessUnit_0Call(ID, limit, offset, _callback);
        }


        /**
         * Execute getBusinessUnit_0 request
         * @return OrganizationAssignmentChangesGetBusinessUnitResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetBusinessUnitResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetBusinessUnitResponse> localVarResp = getBusinessUnit_0WithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getBusinessUnit_0 request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetBusinessUnitResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetBusinessUnitResponse> executeWithHttpInfo() throws ApiException {
            return getBusinessUnit_0WithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getBusinessUnit_0 request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetBusinessUnitResponse> _callback) throws ApiException {
            return getBusinessUnit_0Async(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves a business unit for the specified organization assignment change ID.
     * Retrieves a business unit for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Business Unit  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetBusinessUnit0RequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetBusinessUnit0RequestBuilder getBusinessUnit_0(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetBusinessUnit0RequestBuilder(ID);
    }
    private okhttp3.Call getCommentCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/comment"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCommentValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getComment(Async)");
        }

        return getCommentCall(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetCommentResponse> getCommentWithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getCommentValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCommentResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCommentAsync(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetCommentResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCommentValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCommentResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCommentRequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetCommentRequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetCommentRequestBuilder
         */
        public GetCommentRequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetCommentRequestBuilder
         */
        public GetCommentRequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getComment
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCommentCall(ID, limit, offset, _callback);
        }


        /**
         * Execute getComment request
         * @return OrganizationAssignmentChangesGetCommentResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetCommentResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetCommentResponse> localVarResp = getCommentWithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getComment request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetCommentResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetCommentResponse> executeWithHttpInfo() throws ApiException {
            return getCommentWithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getComment request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetCommentResponse> _callback) throws ApiException {
            return getCommentAsync(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves the comment information for the specified organization assignment change ID.
     * Retrieves the comment information for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Change Organization Assignment (REST), Change Organization Assignments for  \\~Worker\\~ (Mass Action)  Scope: Organizations and Roles
     * @param ID The Workday ID of the resource. (required)
     * @return GetCommentRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCommentRequestBuilder getComment(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetCommentRequestBuilder(ID);
    }
    private okhttp3.Call getCommentInfoCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/comment/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCommentInfoValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCommentInfo(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getCommentInfo(Async)");
        }

        return getCommentInfoCall(ID, subresourceID, _callback);

    }


    private ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> getCommentInfoWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getCommentInfoValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<Comments7d98fd55aeee100022968e52a1b31c60>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCommentInfoAsync(String ID, String subresourceID, final ApiCallback<Comments7d98fd55aeee100022968e52a1b31c60> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCommentInfoValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<Comments7d98fd55aeee100022968e52a1b31c60>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCommentInfoRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetCommentInfoRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getCommentInfo
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCommentInfoCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getCommentInfo request
         * @return Comments7d98fd55aeee100022968e52a1b31c60
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public Comments7d98fd55aeee100022968e52a1b31c60 execute() throws ApiException {
            ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> localVarResp = getCommentInfoWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCommentInfo request with HTTP info returned
         * @return ApiResponse&lt;Comments7d98fd55aeee100022968e52a1b31c60&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> executeWithHttpInfo() throws ApiException {
            return getCommentInfoWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getCommentInfo request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Comments7d98fd55aeee100022968e52a1b31c60> _callback) throws ApiException {
            return getCommentInfoAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves the comment information for the specified organization assignment change ID.
     * Retrieves the comment information for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Change Organization Assignment (REST), Change Organization Assignments for  \\~Worker\\~ (Mass Action)  Scope: Organizations and Roles
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetCommentInfoRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCommentInfoRequestBuilder getCommentInfo(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetCommentInfoRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getCompanyCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/company"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCompanyValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCompany(Async)");
        }

        return getCompanyCall(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetCompanyResponse> getCompanyWithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getCompanyValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCompanyResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCompanyAsync(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetCompanyResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCompanyValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCompanyResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCompanyRequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetCompanyRequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetCompanyRequestBuilder
         */
        public GetCompanyRequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetCompanyRequestBuilder
         */
        public GetCompanyRequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getCompany
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCompanyCall(ID, limit, offset, _callback);
        }


        /**
         * Execute getCompany request
         * @return OrganizationAssignmentChangesGetCompanyResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetCompanyResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetCompanyResponse> localVarResp = getCompanyWithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCompany request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetCompanyResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetCompanyResponse> executeWithHttpInfo() throws ApiException {
            return getCompanyWithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getCompany request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetCompanyResponse> _callback) throws ApiException {
            return getCompanyAsync(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves a company for the specified organization assignment change ID.
     * Retrieves a company for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Company  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetCompanyRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCompanyRequestBuilder getCompany(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetCompanyRequestBuilder(ID);
    }
    private okhttp3.Call getCompanyByIdCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/company/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCompanyByIdValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCompanyById(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getCompanyById(Async)");
        }

        return getCompanyByIdCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> getCompanyByIdWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getCompanyByIdValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCompanyByIdAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCompanyByIdValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCompanyByIdRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetCompanyByIdRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getCompanyById
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCompanyByIdCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getCompanyById request
         * @return OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> localVarResp = getCompanyByIdWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCompanyById request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> executeWithHttpInfo() throws ApiException {
            return getCompanyByIdWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getCompanyById request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> _callback) throws ApiException {
            return getCompanyByIdAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves a company for the specified organization assignment change ID.
     * Retrieves a company for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Company  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetCompanyByIdRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCompanyByIdRequestBuilder getCompanyById(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetCompanyByIdRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getCostCenterCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costCenter/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCostCenterValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCostCenter(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getCostCenter(Async)");
        }

        return getCostCenterCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> getCostCenterWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getCostCenterValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCostCenterAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCostCenterValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCostCenterRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetCostCenterRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getCostCenter
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCostCenterCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getCostCenter request
         * @return OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> localVarResp = getCostCenterWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCostCenter request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> executeWithHttpInfo() throws ApiException {
            return getCostCenterWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getCostCenter request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> _callback) throws ApiException {
            return getCostCenterAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves a cost center for the specified organization assignment change ID.
     * Retrieves a cost center for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Cost Center  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetCostCenterRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCostCenterRequestBuilder getCostCenter(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetCostCenterRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getCostCenter_0Call(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costCenter"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCostCenter_0ValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCostCenter_0(Async)");
        }

        return getCostCenter_0Call(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetCostCenterResponse> getCostCenter_0WithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getCostCenter_0ValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCostCenterResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCostCenter_0Async(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetCostCenterResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCostCenter_0ValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCostCenterResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCostCenter0RequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetCostCenter0RequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetCostCenter0RequestBuilder
         */
        public GetCostCenter0RequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetCostCenter0RequestBuilder
         */
        public GetCostCenter0RequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getCostCenter_0
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCostCenter_0Call(ID, limit, offset, _callback);
        }


        /**
         * Execute getCostCenter_0 request
         * @return OrganizationAssignmentChangesGetCostCenterResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetCostCenterResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetCostCenterResponse> localVarResp = getCostCenter_0WithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCostCenter_0 request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetCostCenterResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetCostCenterResponse> executeWithHttpInfo() throws ApiException {
            return getCostCenter_0WithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getCostCenter_0 request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetCostCenterResponse> _callback) throws ApiException {
            return getCostCenter_0Async(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves a cost center for the specified organization assignment change ID.
     * Retrieves a cost center for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Cost Center  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetCostCenter0RequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCostCenter0RequestBuilder getCostCenter_0(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetCostCenter0RequestBuilder(ID);
    }
    private okhttp3.Call getCostingOrganizationsCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costing/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCostingOrganizationsValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCostingOrganizations(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getCostingOrganizations(Async)");
        }

        return getCostingOrganizationsCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> getCostingOrganizationsWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getCostingOrganizationsValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCostingOrganizationsAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCostingOrganizationsValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCostingOrganizationsRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetCostingOrganizationsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getCostingOrganizations
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCostingOrganizationsCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getCostingOrganizations request
         * @return OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> localVarResp = getCostingOrganizationsWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCostingOrganizations request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> executeWithHttpInfo() throws ApiException {
            return getCostingOrganizationsWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getCostingOrganizations request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> _callback) throws ApiException {
            return getCostingOrganizationsAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves the costing organizations for the specified organization assignment change ID.
     * Retrieves the costing organizations for the specified organization assignment change ID. Costing organizations include: Grants, Funds, Programs, and Gifts. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Grant, Fund, Program, Gift  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetCostingOrganizationsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCostingOrganizationsRequestBuilder getCostingOrganizations(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetCostingOrganizationsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getCostingOrganizations_0Call(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costing"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCostingOrganizations_0ValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCostingOrganizations_0(Async)");
        }

        return getCostingOrganizations_0Call(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetCostingOrganizationsResponse> getCostingOrganizations_0WithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getCostingOrganizations_0ValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCostingOrganizationsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCostingOrganizations_0Async(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetCostingOrganizationsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCostingOrganizations_0ValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCostingOrganizationsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCostingOrganizations0RequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetCostingOrganizations0RequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetCostingOrganizations0RequestBuilder
         */
        public GetCostingOrganizations0RequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetCostingOrganizations0RequestBuilder
         */
        public GetCostingOrganizations0RequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getCostingOrganizations_0
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCostingOrganizations_0Call(ID, limit, offset, _callback);
        }


        /**
         * Execute getCostingOrganizations_0 request
         * @return OrganizationAssignmentChangesGetCostingOrganizationsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetCostingOrganizationsResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetCostingOrganizationsResponse> localVarResp = getCostingOrganizations_0WithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCostingOrganizations_0 request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetCostingOrganizationsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetCostingOrganizationsResponse> executeWithHttpInfo() throws ApiException {
            return getCostingOrganizations_0WithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getCostingOrganizations_0 request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetCostingOrganizationsResponse> _callback) throws ApiException {
            return getCostingOrganizations_0Async(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves the costing organizations for the specified organization assignment change ID.
     * Retrieves the costing organizations for the specified organization assignment change ID. Costing organizations include: Grants, Funds, Programs, and Gifts. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Grant, Fund, Program, Gift  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetCostingOrganizations0RequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCostingOrganizations0RequestBuilder getCostingOrganizations_0(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetCostingOrganizations0RequestBuilder(ID);
    }
    private okhttp3.Call getCustomOrganizationsCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/customOrganizations/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCustomOrganizationsValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCustomOrganizations(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getCustomOrganizations(Async)");
        }

        return getCustomOrganizationsCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> getCustomOrganizationsWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getCustomOrganizationsValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCustomOrganizationsAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCustomOrganizationsValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCustomOrganizationsRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetCustomOrganizationsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getCustomOrganizations
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCustomOrganizationsCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getCustomOrganizations request
         * @return OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> localVarResp = getCustomOrganizationsWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCustomOrganizations request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> executeWithHttpInfo() throws ApiException {
            return getCustomOrganizationsWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getCustomOrganizations request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> _callback) throws ApiException {
            return getCustomOrganizationsAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves the custom organizations for the specified organization assignment change ID.
     * Retrieves the custom organizations for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Custom Organization  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetCustomOrganizationsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomOrganizationsRequestBuilder getCustomOrganizations(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetCustomOrganizationsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getCustomOrganizations_0Call(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/customOrganizations"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCustomOrganizations_0ValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getCustomOrganizations_0(Async)");
        }

        return getCustomOrganizations_0Call(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetCustomOrganizationsResponse> getCustomOrganizations_0WithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getCustomOrganizations_0ValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCustomOrganizationsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getCustomOrganizations_0Async(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetCustomOrganizationsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCustomOrganizations_0ValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetCustomOrganizationsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetCustomOrganizations0RequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetCustomOrganizations0RequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetCustomOrganizations0RequestBuilder
         */
        public GetCustomOrganizations0RequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetCustomOrganizations0RequestBuilder
         */
        public GetCustomOrganizations0RequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getCustomOrganizations_0
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getCustomOrganizations_0Call(ID, limit, offset, _callback);
        }


        /**
         * Execute getCustomOrganizations_0 request
         * @return OrganizationAssignmentChangesGetCustomOrganizationsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetCustomOrganizationsResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetCustomOrganizationsResponse> localVarResp = getCustomOrganizations_0WithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getCustomOrganizations_0 request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetCustomOrganizationsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetCustomOrganizationsResponse> executeWithHttpInfo() throws ApiException {
            return getCustomOrganizations_0WithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getCustomOrganizations_0 request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetCustomOrganizationsResponse> _callback) throws ApiException {
            return getCustomOrganizations_0Async(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves the custom organizations for the specified organization assignment change ID.
     * Retrieves the custom organizations for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Custom Organization  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetCustomOrganizations0RequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetCustomOrganizations0RequestBuilder getCustomOrganizations_0(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetCustomOrganizations0RequestBuilder(ID);
    }
    private okhttp3.Call getInstanceCall(String ID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getInstanceValidateBeforeCall(String ID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getInstance(Async)");
        }

        return getInstanceCall(ID, _callback);

    }


    private ApiResponse<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff> getInstanceWithHttpInfo(String ID) throws ApiException {
        okhttp3.Call localVarCall = getInstanceValidateBeforeCall(ID, null);
        Type localVarReturnType = new TypeToken<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getInstanceAsync(String ID, final ApiCallback<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff> _callback) throws ApiException {

        okhttp3.Call localVarCall = getInstanceValidateBeforeCall(ID, _callback);
        Type localVarReturnType = new TypeToken<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetInstanceRequestBuilder {
        private final String ID;

        private GetInstanceRequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Build call for getInstance
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getInstanceCall(ID, _callback);
        }


        /**
         * Execute getInstance request
         * @return ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff execute() throws ApiException {
            ApiResponse<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff> localVarResp = getInstanceWithHttpInfo(ID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getInstance request with HTTP info returned
         * @return ApiResponse&lt;ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff> executeWithHttpInfo() throws ApiException {
            return getInstanceWithHttpInfo(ID);
        }

        /**
         * Execute getInstance request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<ChangeOrganizationAssignmentDefaultRepresentationDb2f38bfb555100012de1eb17c2f00ff> _callback) throws ApiException {
            return getInstanceAsync(ID, _callback);
        }
    }

    /**
     * Retrieves a single organization assignment change event instance.
     * Retrieves information about an organization assignment change event with the specified ID.  Secured by: Change Organization Assignment (REST), Staffing Organizations: Business Unit, Staffing Organizations: Company, Staffing Organizations: Cost Center, Staffing Organizations: Custom Organization, Staffing Organizations: Grant, Fund, Program, Gift, Staffing Organizations: Header, Staffing Organizations: Region  Scope: Organizations and Roles, Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetInstanceRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetInstanceRequestBuilder getInstance(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetInstanceRequestBuilder(ID);
    }
    private okhttp3.Call getRegionCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/region"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRegionValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getRegion(Async)");
        }

        return getRegionCall(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetRegionResponse> getRegionWithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getRegionValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetRegionResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getRegionAsync(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetRegionResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRegionValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetRegionResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetRegionRequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetRegionRequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetRegionRequestBuilder
         */
        public GetRegionRequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetRegionRequestBuilder
         */
        public GetRegionRequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getRegion
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getRegionCall(ID, limit, offset, _callback);
        }


        /**
         * Execute getRegion request
         * @return OrganizationAssignmentChangesGetRegionResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetRegionResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetRegionResponse> localVarResp = getRegionWithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getRegion request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetRegionResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetRegionResponse> executeWithHttpInfo() throws ApiException {
            return getRegionWithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getRegion request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetRegionResponse> _callback) throws ApiException {
            return getRegionAsync(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves a region for the specified organization assignment change ID.
     * Retrieves a region for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Region  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetRegionRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionRequestBuilder getRegion(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetRegionRequestBuilder(ID);
    }
    private okhttp3.Call getRegionByIdCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/region/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRegionByIdValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getRegionById(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getRegionById(Async)");
        }

        return getRegionByIdCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> getRegionByIdWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getRegionByIdValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getRegionByIdAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRegionByIdValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetRegionByIdRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetRegionByIdRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getRegionById
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getRegionByIdCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getRegionById request
         * @return OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> localVarResp = getRegionByIdWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getRegionById request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> executeWithHttpInfo() throws ApiException {
            return getRegionByIdWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getRegionById request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> _callback) throws ApiException {
            return getRegionByIdAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves a region for the specified organization assignment change ID.
     * Retrieves a region for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Region  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetRegionByIdRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetRegionByIdRequestBuilder getRegionById(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetRegionByIdRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getStartDetailsCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/startDetails/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getStartDetailsValidateBeforeCall(String ID, String subresourceID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getStartDetails(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling getStartDetails(Async)");
        }

        return getStartDetailsCall(ID, subresourceID, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> getStartDetailsWithHttpInfo(String ID, String subresourceID) throws ApiException {
        okhttp3.Call localVarCall = getStartDetailsValidateBeforeCall(ID, subresourceID, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getStartDetailsAsync(String ID, String subresourceID, final ApiCallback<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> _callback) throws ApiException {

        okhttp3.Call localVarCall = getStartDetailsValidateBeforeCall(ID, subresourceID, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetStartDetailsRequestBuilder {
        private final String ID;
        private final String subresourceID;

        private GetStartDetailsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Build call for getStartDetails
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getStartDetailsCall(ID, subresourceID, _callback);
        }


        /**
         * Execute getStartDetails request
         * @return OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> localVarResp = getStartDetailsWithHttpInfo(ID, subresourceID);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getStartDetails request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> executeWithHttpInfo() throws ApiException {
            return getStartDetailsWithHttpInfo(ID, subresourceID);
        }

        /**
         * Execute getStartDetails request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> _callback) throws ApiException {
            return getStartDetailsAsync(ID, subresourceID, _callback);
        }
    }

    /**
     * Retrieves the start details for the specified organization assignment change ID.
     * Retrieves the start details for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Header  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @return GetStartDetailsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetStartDetailsRequestBuilder getStartDetails(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new GetStartDetailsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call getStartDetails_0Call(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/startDetails"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getStartDetails_0ValidateBeforeCall(String ID, Long limit, Long offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling getStartDetails_0(Async)");
        }

        return getStartDetails_0Call(ID, limit, offset, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesGetStartDetailsResponse> getStartDetails_0WithHttpInfo(String ID, Long limit, Long offset) throws ApiException {
        okhttp3.Call localVarCall = getStartDetails_0ValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetStartDetailsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getStartDetails_0Async(String ID, Long limit, Long offset, final ApiCallback<OrganizationAssignmentChangesGetStartDetailsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getStartDetails_0ValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesGetStartDetailsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetStartDetails0RequestBuilder {
        private final String ID;
        private Long limit;
        private Long offset;

        private GetStartDetails0RequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set limit
         * @param limit The maximum number of objects in a single response. The default is 20. The maximum is 100. (optional)
         * @return GetStartDetails0RequestBuilder
         */
        public GetStartDetails0RequestBuilder limit(Long limit) {
            this.limit = limit;
            return this;
        }
        
        /**
         * Set offset
         * @param offset The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object. (optional)
         * @return GetStartDetails0RequestBuilder
         */
        public GetStartDetails0RequestBuilder offset(Long offset) {
            this.offset = offset;
            return this;
        }
        
        /**
         * Build call for getStartDetails_0
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getStartDetails_0Call(ID, limit, offset, _callback);
        }


        /**
         * Execute getStartDetails_0 request
         * @return OrganizationAssignmentChangesGetStartDetailsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesGetStartDetailsResponse execute() throws ApiException {
            ApiResponse<OrganizationAssignmentChangesGetStartDetailsResponse> localVarResp = getStartDetails_0WithHttpInfo(ID, limit, offset);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getStartDetails_0 request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesGetStartDetailsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesGetStartDetailsResponse> executeWithHttpInfo() throws ApiException {
            return getStartDetails_0WithHttpInfo(ID, limit, offset);
        }

        /**
         * Execute getStartDetails_0 request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesGetStartDetailsResponse> _callback) throws ApiException {
            return getStartDetails_0Async(ID, limit, offset, _callback);
        }
    }

    /**
     * Retrieves the start details for the specified organization assignment change ID.
     * Retrieves the start details for the specified organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  Secured by: Staffing Organizations: Header  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @return GetStartDetails0RequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public GetStartDetails0RequestBuilder getStartDetails_0(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new GetStartDetails0RequestBuilder(ID);
    }
    private okhttp3.Call partiallyUpdateCompanyCall(String ID, String subresourceID, OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/company/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiallyUpdateCompanyValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling partiallyUpdateCompany(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling partiallyUpdateCompany(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354' is set
        if (organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354' when calling partiallyUpdateCompany(Async)");
        }

        return partiallyUpdateCompanyCall(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> partiallyUpdateCompanyWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354) throws ApiException {
        okhttp3.Call localVarCall = partiallyUpdateCompanyValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call partiallyUpdateCompanyAsync(String ID, String subresourceID, OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, final ApiCallback<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiallyUpdateCompanyValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class PartiallyUpdateCompanyRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private Company56fe0dd0eca1100019cfe097d26a03f2 company;

        private PartiallyUpdateCompanyRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set company
         * @param company  (optional)
         * @return PartiallyUpdateCompanyRequestBuilder
         */
        public PartiallyUpdateCompanyRequestBuilder company(Company56fe0dd0eca1100019cfe097d26a03f2 company) {
            this.company = company;
            return this;
        }
        
        /**
         * Build call for partiallyUpdateCompany
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 = buildBodyParams();
            return partiallyUpdateCompanyCall(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, _callback);
        }

        private OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 buildBodyParams() {
            OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 = new OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354();
            return organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354;
        }

        /**
         * Execute partiallyUpdateCompany request
         * @return OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 execute() throws ApiException {
            OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> localVarResp = partiallyUpdateCompanyWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute partiallyUpdateCompany request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 = buildBodyParams();
            return partiallyUpdateCompanyWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354);
        }

        /**
         * Execute partiallyUpdateCompany request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354> _callback) throws ApiException {
            OrganizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354 = buildBodyParams();
            return partiallyUpdateCompanyAsync(ID, subresourceID, organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354, _callback);
        }
    }

    /**
     * Partially updates the company for the specified organization assignment change ID.
     * Partially updates the company for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  You can call GET /organizationAssignmentChanges/{ID}/company/{subResourceID} to get the existing data to update.   The same Workday UI validations apply with this PATCH method. The data updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  In the request body, specify the Workday ID of the company.   To retrieve a companies ID, call the GET /values/organizationAssignmentChangesGroup/companies prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the companies by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the companies by active organization based on the current date.  Secured by: Staffing Organizations: Company  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesCompanyData652d516fdff41000086e0b9c96950354  (required)
     * @return PartiallyUpdateCompanyRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public PartiallyUpdateCompanyRequestBuilder partiallyUpdateCompany(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new PartiallyUpdateCompanyRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call partiallyUpdateCostingOptionsCall(String ID, String subresourceID, OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costing/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiallyUpdateCostingOptionsValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling partiallyUpdateCostingOptions(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling partiallyUpdateCostingOptions(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a' is set
        if (organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a' when calling partiallyUpdateCostingOptions(Async)");
        }

        return partiallyUpdateCostingOptionsCall(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> partiallyUpdateCostingOptionsWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a) throws ApiException {
        okhttp3.Call localVarCall = partiallyUpdateCostingOptionsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call partiallyUpdateCostingOptionsAsync(String ID, String subresourceID, OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, final ApiCallback<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiallyUpdateCostingOptionsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class PartiallyUpdateCostingOptionsRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private GrantA18edb56aca0100014a4a0bcf25c045e grant;
        private ProgramA18edb56aca0100014a4a0b7ddf7045d program;
        private GiftA18edb56aca0100014a4a0a9f876045b gift;
        private FundA18edb56aca0100014a4a0b27352045c fund;

        private PartiallyUpdateCostingOptionsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set grant
         * @param grant  (optional)
         * @return PartiallyUpdateCostingOptionsRequestBuilder
         */
        public PartiallyUpdateCostingOptionsRequestBuilder grant(GrantA18edb56aca0100014a4a0bcf25c045e grant) {
            this.grant = grant;
            return this;
        }
        
        /**
         * Set program
         * @param program  (optional)
         * @return PartiallyUpdateCostingOptionsRequestBuilder
         */
        public PartiallyUpdateCostingOptionsRequestBuilder program(ProgramA18edb56aca0100014a4a0b7ddf7045d program) {
            this.program = program;
            return this;
        }
        
        /**
         * Set gift
         * @param gift  (optional)
         * @return PartiallyUpdateCostingOptionsRequestBuilder
         */
        public PartiallyUpdateCostingOptionsRequestBuilder gift(GiftA18edb56aca0100014a4a0a9f876045b gift) {
            this.gift = gift;
            return this;
        }
        
        /**
         * Set fund
         * @param fund  (optional)
         * @return PartiallyUpdateCostingOptionsRequestBuilder
         */
        public PartiallyUpdateCostingOptionsRequestBuilder fund(FundA18edb56aca0100014a4a0b27352045c fund) {
            this.fund = fund;
            return this;
        }
        
        /**
         * Build call for partiallyUpdateCostingOptions
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a = buildBodyParams();
            return partiallyUpdateCostingOptionsCall(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, _callback);
        }

        private OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a buildBodyParams() {
            OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a = new OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a();
            return organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a;
        }

        /**
         * Execute partiallyUpdateCostingOptions request
         * @return OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a execute() throws ApiException {
            OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> localVarResp = partiallyUpdateCostingOptionsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute partiallyUpdateCostingOptions request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a = buildBodyParams();
            return partiallyUpdateCostingOptionsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a);
        }

        /**
         * Execute partiallyUpdateCostingOptions request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a> _callback) throws ApiException {
            OrganizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a = buildBodyParams();
            return partiallyUpdateCostingOptionsAsync(ID, subresourceID, organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a, _callback);
        }
    }

    /**
     * Partially updates the costing organization options for the specified organization assignment change ID.
     * Partially updates the costing organizations for the specified organization assignment change ID. Costing organizations include: Grants, Funds, Programs, and Gifts. The {subResourceID} path parameter must be the same as the {ID} value.  You can call GET /organizationAssignmentChanges/{ID}/costing/{subResourceID} to get the existing data to update.   The same Workday UI validations apply with this PATCH method. The data updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  In the request body, specify the Workday ID of the grant, program, gift, or fund you want to update.  To retrieve a grants ID, call the GET /values/organizationAssignmentChangesGroup/grants prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the grants by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the grants by active organization based on the current date.   To retrieve a funds ID, call the GET /values/organizationAssignmentChangesGroup/funds prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the funds by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the funds by active organization based on the current date.   To retrieve a programs ID, call the GET /values/organizationAssignmentChangesGroup/programs prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the programs by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the programs by active organization based on the current date.   To retrieve a gifts ID, call the GET /values/organizationAssignmentChangesGroup/gifts prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the gifts by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the gifts by active organization based on the current date.  Secured by: Staffing Organizations: Grant, Fund, Program, Gift  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesCostingDataA18edb56aca0100014a4a09dc57e045a  (required)
     * @return PartiallyUpdateCostingOptionsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public PartiallyUpdateCostingOptionsRequestBuilder partiallyUpdateCostingOptions(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new PartiallyUpdateCostingOptionsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call partiallyUpdateStartDetailsCall(String ID, String subresourceID, OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/startDetails/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiallyUpdateStartDetailsValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling partiallyUpdateStartDetails(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling partiallyUpdateStartDetails(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b' is set
        if (organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b' when calling partiallyUpdateStartDetails(Async)");
        }

        return partiallyUpdateStartDetailsCall(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> partiallyUpdateStartDetailsWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b) throws ApiException {
        okhttp3.Call localVarCall = partiallyUpdateStartDetailsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call partiallyUpdateStartDetailsAsync(String ID, String subresourceID, OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, final ApiCallback<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiallyUpdateStartDetailsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class PartiallyUpdateStartDetailsRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private LocalDate date;
        private SupervisoryOrganization827372de445710001cfe36968a480000 supervisoryOrganization;
        private Position827372de4457100019c0e9c5977d0000 position;
        private Worker90009f2bfc4910001b166d44a72c0727 worker;

        private PartiallyUpdateStartDetailsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set date
         * @param date The date this business process takes effect. (optional)
         * @return PartiallyUpdateStartDetailsRequestBuilder
         */
        public PartiallyUpdateStartDetailsRequestBuilder date(LocalDate date) {
            this.date = date;
            return this;
        }
        
        /**
         * Set supervisoryOrganization
         * @param supervisoryOrganization  (optional)
         * @return PartiallyUpdateStartDetailsRequestBuilder
         */
        public PartiallyUpdateStartDetailsRequestBuilder supervisoryOrganization(SupervisoryOrganization827372de445710001cfe36968a480000 supervisoryOrganization) {
            this.supervisoryOrganization = supervisoryOrganization;
            return this;
        }
        
        /**
         * Set position
         * @param position  (optional)
         * @return PartiallyUpdateStartDetailsRequestBuilder
         */
        public PartiallyUpdateStartDetailsRequestBuilder position(Position827372de4457100019c0e9c5977d0000 position) {
            this.position = position;
            return this;
        }
        
        /**
         * Set worker
         * @param worker  (optional)
         * @return PartiallyUpdateStartDetailsRequestBuilder
         */
        public PartiallyUpdateStartDetailsRequestBuilder worker(Worker90009f2bfc4910001b166d44a72c0727 worker) {
            this.worker = worker;
            return this;
        }
        
        /**
         * Build call for partiallyUpdateStartDetails
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b = buildBodyParams();
            return partiallyUpdateStartDetailsCall(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, _callback);
        }

        private OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b buildBodyParams() {
            OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b = new OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b();
            return organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b;
        }

        /**
         * Execute partiallyUpdateStartDetails request
         * @return OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b execute() throws ApiException {
            OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> localVarResp = partiallyUpdateStartDetailsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute partiallyUpdateStartDetails request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b = buildBodyParams();
            return partiallyUpdateStartDetailsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b);
        }

        /**
         * Execute partiallyUpdateStartDetails request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b> _callback) throws ApiException {
            OrganizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b = buildBodyParams();
            return partiallyUpdateStartDetailsAsync(ID, subresourceID, organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b, _callback);
        }
    }

    /**
     * Partially updates the start details for the specified organization assignment change ID.
     * Partially updates the start details for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  In the request body, specify the effective date for the event.   You can call GET /organizationAssignmentChanges/{ID}/startDetails/{subResourceID} to get the existing data to update.   You can only update the date field once the event is initiated. These fields are read-only: worker, supervisoryOrganization, and position.  The same Workday UI validations apply with this PATCH method.   The updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  Secured by: Staffing Organizations: Header  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesStartDetailsData90009f2bfc49100017b10cd07d19063b  (required)
     * @return PartiallyUpdateStartDetailsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public PartiallyUpdateStartDetailsRequestBuilder partiallyUpdateStartDetails(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new PartiallyUpdateStartDetailsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call submitChangeRequestCall(String ID, EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/submit"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call submitChangeRequestValidateBeforeCall(String ID, EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling submitChangeRequest(Async)");
        }

        // verify the required parameter 'eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1' is set
        if (eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 == null) {
            throw new ApiException("Missing the required parameter 'eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1' when calling submitChangeRequest(Async)");
        }

        return submitChangeRequestCall(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, _callback);

    }


    private ApiResponse<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1> submitChangeRequestWithHttpInfo(String ID, EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1) throws ApiException {
        okhttp3.Call localVarCall = submitChangeRequestValidateBeforeCall(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, null);
        Type localVarReturnType = new TypeToken<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call submitChangeRequestAsync(String ID, EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, final ApiCallback<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1> _callback) throws ApiException {

        okhttp3.Call localVarCall = submitChangeRequestValidateBeforeCall(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, _callback);
        Type localVarReturnType = new TypeToken<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class SubmitChangeRequestRequestBuilder {
        private final String ID;
        private BusinessProcessParameters23782ad3f54110002073aab65def00fb businessProcessParameters;
        private String id;
        private String descriptor;

        private SubmitChangeRequestRequestBuilder(String ID) {
            this.ID = ID;
        }

        /**
         * Set businessProcessParameters
         * @param businessProcessParameters  (optional)
         * @return SubmitChangeRequestRequestBuilder
         */
        public SubmitChangeRequestRequestBuilder businessProcessParameters(BusinessProcessParameters23782ad3f54110002073aab65def00fb businessProcessParameters) {
            this.businessProcessParameters = businessProcessParameters;
            return this;
        }
        
        /**
         * Set id
         * @param id Id of the instance (optional)
         * @return SubmitChangeRequestRequestBuilder
         */
        public SubmitChangeRequestRequestBuilder id(String id) {
            this.id = id;
            return this;
        }
        
        /**
         * Set descriptor
         * @param descriptor A preview of the instance (optional)
         * @return SubmitChangeRequestRequestBuilder
         */
        public SubmitChangeRequestRequestBuilder descriptor(String descriptor) {
            this.descriptor = descriptor;
            return this;
        }
        
        /**
         * Build call for submitChangeRequest
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 = buildBodyParams();
            return submitChangeRequestCall(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, _callback);
        }

        private EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 buildBodyParams() {
            EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 = new EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1();
            return eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1;
        }

        /**
         * Execute submitChangeRequest request
         * @return EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 execute() throws ApiException {
            EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 = buildBodyParams();
            ApiResponse<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1> localVarResp = submitChangeRequestWithHttpInfo(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute submitChangeRequest request with HTTP info returned
         * @return ApiResponse&lt;EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1> executeWithHttpInfo() throws ApiException {
            EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 = buildBodyParams();
            return submitChangeRequestWithHttpInfo(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1);
        }

        /**
         * Execute submitChangeRequest request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1> _callback) throws ApiException {
            EventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1 = buildBodyParams();
            return submitChangeRequestAsync(ID, eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1, _callback);
        }
    }

    /**
     * Submits the organization changes request for the specified ID, and initiates the Change Organization Assignment business process.
     * Submits the organization assignment change event for the specified ID, and initiates the Change Organization Assignment business process.  Submitting this request with an empty request body { } is equivalent to clicking the Submit button on the Change Organization Assgingment task in Workday.  For the equivalent of clicking the Save For Later button, specify the Save for Later Workday ID, \&quot;\&quot;d9e41a8c446c11de98360015c5e6daf6\&quot;\&quot;, in the status{id} request field.   Example: { \&quot;\&quot;status\&quot;\&quot;: {     \&quot;\&quot;id\&quot;\&quot;: \&quot;\&quot;d9e41a8c446c11de98360015c5e6daf6\&quot;\&quot;   } }  Secured by: Change Organization Assignment (REST)  Scope: Organizations and Roles
     * @param ID The Workday ID of the resource. (required)
     * @param eventStateOrganizationAssignmentF3e1ff305e2d100003327f7b7fa103f1  (required)
     * @return SubmitChangeRequestRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Resource created. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public SubmitChangeRequestRequestBuilder submitChangeRequest(String ID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        return new SubmitChangeRequestRequestBuilder(ID);
    }
    private okhttp3.Call updateBusinessUnitCall(String ID, String subresourceID, OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/businessUnit/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateBusinessUnitValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling updateBusinessUnit(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling updateBusinessUnit(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365' is set
        if (organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365' when calling updateBusinessUnit(Async)");
        }

        return updateBusinessUnitCall(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> updateBusinessUnitWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365) throws ApiException {
        okhttp3.Call localVarCall = updateBusinessUnitValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateBusinessUnitAsync(String ID, String subresourceID, OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, final ApiCallback<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateBusinessUnitValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateBusinessUnitRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private BusinessUnit5aabf8e28cb310002520b2aabc470366 businessUnit;

        private UpdateBusinessUnitRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set businessUnit
         * @param businessUnit  (optional)
         * @return UpdateBusinessUnitRequestBuilder
         */
        public UpdateBusinessUnitRequestBuilder businessUnit(BusinessUnit5aabf8e28cb310002520b2aabc470366 businessUnit) {
            this.businessUnit = businessUnit;
            return this;
        }
        
        /**
         * Build call for updateBusinessUnit
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 = buildBodyParams();
            return updateBusinessUnitCall(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, _callback);
        }

        private OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 buildBodyParams() {
            OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 = new OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365();
            return organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365;
        }

        /**
         * Execute updateBusinessUnit request
         * @return OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 execute() throws ApiException {
            OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> localVarResp = updateBusinessUnitWithHttpInfo(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateBusinessUnit request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 = buildBodyParams();
            return updateBusinessUnitWithHttpInfo(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365);
        }

        /**
         * Execute updateBusinessUnit request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365> _callback) throws ApiException {
            OrganizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365 = buildBodyParams();
            return updateBusinessUnitAsync(ID, subresourceID, organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365, _callback);
        }
    }

    /**
     * Partially updates the business unit for the specified organization assignment change ID.
     * Partially updates the business unit option for the specified change organization assignment ID. The {subResourceID} path parameter must be the same as the {ID} value.  You can call GET /organizationAssignmentChanges/{ID}/businessUnit/{subResourceID} to get the existing data to update.   The same Workday UI validations apply with this PATCH method. The data updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  In the request body, specify the Workday ID of the business unit.   To retrieve a businessUnit ID, call the GET /values/organizationAssignmentChangesGroup/businessUnit prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the business units by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the business units by active organization based on the current date.  Secured by: Staffing Organizations: Business Unit  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesBusinessUnitData5aabf8e28cb310002520b2a2b31d0365  (required)
     * @return UpdateBusinessUnitRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public UpdateBusinessUnitRequestBuilder updateBusinessUnit(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new UpdateBusinessUnitRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call updateCommentCall(String ID, String subresourceID, Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = comments7d98fd55aeee100022968e52a1b31c60;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/comment/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCommentValidateBeforeCall(String ID, String subresourceID, Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling updateComment(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling updateComment(Async)");
        }

        // verify the required parameter 'comments7d98fd55aeee100022968e52a1b31c60' is set
        if (comments7d98fd55aeee100022968e52a1b31c60 == null) {
            throw new ApiException("Missing the required parameter 'comments7d98fd55aeee100022968e52a1b31c60' when calling updateComment(Async)");
        }

        return updateCommentCall(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60, _callback);

    }


    private ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> updateCommentWithHttpInfo(String ID, String subresourceID, Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60) throws ApiException {
        okhttp3.Call localVarCall = updateCommentValidateBeforeCall(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60, null);
        Type localVarReturnType = new TypeToken<Comments7d98fd55aeee100022968e52a1b31c60>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateCommentAsync(String ID, String subresourceID, Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60, final ApiCallback<Comments7d98fd55aeee100022968e52a1b31c60> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCommentValidateBeforeCall(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60, _callback);
        Type localVarReturnType = new TypeToken<Comments7d98fd55aeee100022968e52a1b31c60>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateCommentRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private String comment;

        private UpdateCommentRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set comment
         * @param comment The business process comment for a worker event before it&#39;s submitted. (optional)
         * @return UpdateCommentRequestBuilder
         */
        public UpdateCommentRequestBuilder comment(String comment) {
            this.comment = comment;
            return this;
        }
        
        /**
         * Build call for updateComment
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60 = buildBodyParams();
            return updateCommentCall(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60, _callback);
        }

        private Comments7d98fd55aeee100022968e52a1b31c60 buildBodyParams() {
            Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60 = new Comments7d98fd55aeee100022968e52a1b31c60();
            return comments7d98fd55aeee100022968e52a1b31c60;
        }

        /**
         * Execute updateComment request
         * @return Comments7d98fd55aeee100022968e52a1b31c60
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public Comments7d98fd55aeee100022968e52a1b31c60 execute() throws ApiException {
            Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60 = buildBodyParams();
            ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> localVarResp = updateCommentWithHttpInfo(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateComment request with HTTP info returned
         * @return ApiResponse&lt;Comments7d98fd55aeee100022968e52a1b31c60&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<Comments7d98fd55aeee100022968e52a1b31c60> executeWithHttpInfo() throws ApiException {
            Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60 = buildBodyParams();
            return updateCommentWithHttpInfo(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60);
        }

        /**
         * Execute updateComment request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<Comments7d98fd55aeee100022968e52a1b31c60> _callback) throws ApiException {
            Comments7d98fd55aeee100022968e52a1b31c60 comments7d98fd55aeee100022968e52a1b31c60 = buildBodyParams();
            return updateCommentAsync(ID, subresourceID, comments7d98fd55aeee100022968e52a1b31c60, _callback);
        }
    }

    /**
     * Partially updates  the comment for the organization assignment change ID.
     * Partially updates the comment for the organization assignment change ID. The {subResourceID} path parameter must be the same as the {ID} value.  The data updates in this PATCH method don&#39;t persist until you call POST/organizationAssignmentChanges/{ID}/submit.  To get the exising data to update, call GET/organizationAssignmentChanges/{ID}/comment/{subResourceID}.  Secured by: Change Organization Assignment (REST), Change Organization Assignments for  \\~Worker\\~ (Mass Action)  Scope: Organizations and Roles
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param comments7d98fd55aeee100022968e52a1b31c60  (required)
     * @return UpdateCommentRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public UpdateCommentRequestBuilder updateComment(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new UpdateCommentRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call updateCostCenterCall(String ID, String subresourceID, OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/costCenter/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCostCenterValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling updateCostCenter(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling updateCostCenter(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e' is set
        if (organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e' when calling updateCostCenter(Async)");
        }

        return updateCostCenterCall(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> updateCostCenterWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e) throws ApiException {
        okhttp3.Call localVarCall = updateCostCenterValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateCostCenterAsync(String ID, String subresourceID, OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, final ApiCallback<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCostCenterValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateCostCenterRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private CostCenter5aabf8e28cb3100010a999f40b07024f costCenter;

        private UpdateCostCenterRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set costCenter
         * @param costCenter  (optional)
         * @return UpdateCostCenterRequestBuilder
         */
        public UpdateCostCenterRequestBuilder costCenter(CostCenter5aabf8e28cb3100010a999f40b07024f costCenter) {
            this.costCenter = costCenter;
            return this;
        }
        
        /**
         * Build call for updateCostCenter
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e = buildBodyParams();
            return updateCostCenterCall(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, _callback);
        }

        private OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e buildBodyParams() {
            OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e = new OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e();
            return organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e;
        }

        /**
         * Execute updateCostCenter request
         * @return OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e execute() throws ApiException {
            OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> localVarResp = updateCostCenterWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateCostCenter request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e = buildBodyParams();
            return updateCostCenterWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e);
        }

        /**
         * Execute updateCostCenter request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e> _callback) throws ApiException {
            OrganizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e = buildBodyParams();
            return updateCostCenterAsync(ID, subresourceID, organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e, _callback);
        }
    }

    /**
     * Partially updates the cost center for the specified organization assignment change ID.
     * Partially updates the cost center for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  You can call GET /organizationAssignmentChanges/{ID}/costCenter/{subResourceID} to get the existing data to update.   The same Workday UI validations apply with this PATCH method. The data updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  In the request body, specify the Workday ID of the cost center.   To retrieve a costCenter ID, call the GET /values/organizationAssignmentChangesGroup/costCenters prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the cost centers by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the cost centers by active organization based on the current date.  Secured by: Staffing Organizations: Cost Center  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesCostCenterData5aabf8e28cb3100010a999db2700024e  (required)
     * @return UpdateCostCenterRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public UpdateCostCenterRequestBuilder updateCostCenter(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new UpdateCostCenterRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call updateCustomOrganizationsCall(String ID, String subresourceID, OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/customOrganizations/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCustomOrganizationsValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling updateCustomOrganizations(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling updateCustomOrganizations(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f' is set
        if (organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f' when calling updateCustomOrganizations(Async)");
        }

        return updateCustomOrganizationsCall(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> updateCustomOrganizationsWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f) throws ApiException {
        okhttp3.Call localVarCall = updateCustomOrganizationsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateCustomOrganizationsAsync(String ID, String subresourceID, OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, final ApiCallback<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCustomOrganizationsValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateCustomOrganizationsRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private List<CustomOrganizationDetails3950e273020a100017857926d35d369c> customOrganizations;

        private UpdateCustomOrganizationsRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set customOrganizations
         * @param customOrganizations The new custom organizations for the worker as of the effective date. (optional)
         * @return UpdateCustomOrganizationsRequestBuilder
         */
        public UpdateCustomOrganizationsRequestBuilder customOrganizations(List<CustomOrganizationDetails3950e273020a100017857926d35d369c> customOrganizations) {
            this.customOrganizations = customOrganizations;
            return this;
        }
        
        /**
         * Build call for updateCustomOrganizations
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f = buildBodyParams();
            return updateCustomOrganizationsCall(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, _callback);
        }

        private OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f buildBodyParams() {
            OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f = new OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f();
            return organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f;
        }

        /**
         * Execute updateCustomOrganizations request
         * @return OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f execute() throws ApiException {
            OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> localVarResp = updateCustomOrganizationsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateCustomOrganizations request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f = buildBodyParams();
            return updateCustomOrganizationsWithHttpInfo(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f);
        }

        /**
         * Execute updateCustomOrganizations request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f> _callback) throws ApiException {
            OrganizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f = buildBodyParams();
            return updateCustomOrganizationsAsync(ID, subresourceID, organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f, _callback);
        }
    }

    /**
     * Partially updates the custom organizations for the specified organization assignment change ID.
     * Partially updates the custom organizations for the specified organization assignment change ID.  The {subResourceID} path parameter must be the same as the {ID} value.  You can call GET /organizationAssignmentChanges/{ID}/customorganization/{subResourceID} to get the existing data to update.   The same Workday UI validations apply with this PATCH method. The data updates in this PATCH method do not persist until you call POST /organizationAssignmentChanges/{ID}/submit.  In the request body, specify the Workday ID of the custom organization {id}  To retrieve a custom organization ID, call the GET /values/organizationAssignmentChangesGroup/customs prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the custom organizations, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the active custom organizations based on the current date.  Secured by: Staffing Organizations: Custom Organization  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesCustomOrganizationDetailsData53cd2b632146100011e9bf4e7041551f  (required)
     * @return UpdateCustomOrganizationsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public UpdateCustomOrganizationsRequestBuilder updateCustomOrganizations(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new UpdateCustomOrganizationsRequestBuilder(ID, subresourceID);
    }
    private okhttp3.Call updateRegionCall(String ID, String subresourceID, OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373;

        // create path and map variables
        String localVarPath = "/organizationAssignmentChanges/{ID}/region/{subresourceID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()))
            .replace("{" + "subresourceID" + "}", localVarApiClient.escapeString(subresourceID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateRegionValidateBeforeCall(String ID, String subresourceID, OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling updateRegion(Async)");
        }

        // verify the required parameter 'subresourceID' is set
        if (subresourceID == null) {
            throw new ApiException("Missing the required parameter 'subresourceID' when calling updateRegion(Async)");
        }

        // verify the required parameter 'organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373' is set
        if (organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 == null) {
            throw new ApiException("Missing the required parameter 'organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373' when calling updateRegion(Async)");
        }

        return updateRegionCall(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, _callback);

    }


    private ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> updateRegionWithHttpInfo(String ID, String subresourceID, OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373) throws ApiException {
        okhttp3.Call localVarCall = updateRegionValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, null);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call updateRegionAsync(String ID, String subresourceID, OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, final ApiCallback<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateRegionValidateBeforeCall(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, _callback);
        Type localVarReturnType = new TypeToken<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class UpdateRegionRequestBuilder {
        private final String ID;
        private final String subresourceID;
        private RegionA18edb56aca0100006997ec7e07d0374 region;

        private UpdateRegionRequestBuilder(String ID, String subresourceID) {
            this.ID = ID;
            this.subresourceID = subresourceID;
        }

        /**
         * Set region
         * @param region  (optional)
         * @return UpdateRegionRequestBuilder
         */
        public UpdateRegionRequestBuilder region(RegionA18edb56aca0100006997ec7e07d0374 region) {
            this.region = region;
            return this;
        }
        
        /**
         * Build call for updateRegion
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 = buildBodyParams();
            return updateRegionCall(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, _callback);
        }

        private OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 buildBodyParams() {
            OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 = new OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373();
            return organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373;
        }

        /**
         * Execute updateRegion request
         * @return OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 execute() throws ApiException {
            OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 = buildBodyParams();
            ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> localVarResp = updateRegionWithHttpInfo(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute updateRegion request with HTTP info returned
         * @return ApiResponse&lt;OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> executeWithHttpInfo() throws ApiException {
            OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 = buildBodyParams();
            return updateRegionWithHttpInfo(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373);
        }

        /**
         * Execute updateRegion request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
            <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373> _callback) throws ApiException {
            OrganizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373 = buildBodyParams();
            return updateRegionAsync(ID, subresourceID, organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373, _callback);
        }
    }

    /**
     * Partially updates the region for the specified organization assignment change ID.
     * Partially updates the region for the specified organization assignment change ID.   The {subResourceID} path parameter must be the same as the {ID} value.  In the request body, specify the Workday ID of the region.   To retrieve a regions ID, call the GET /values/organizationAssignmentChangesGroup/regions prompt endpoint, which takes the change organization assignment ID as the event query parameter. If you specify the event parameter, it returns HREF links to the regions by organization, as of the event&#39;s effective date. If you don&#39;t specify the event parameter, it returns HREF links to the regions by active organization based on the current date.  Secured by: Staffing Organizations: Region  Scope: Staffing
     * @param ID The Workday ID of the resource. (required)
     * @param subresourceID The Workday ID of the subresource. (required)
     * @param organizationAssignmentChangesRegionDataA18edb56aca0100006997e68e5780373  (required)
     * @return UpdateRegionRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response. A successful response can return no matched data. Updating resource. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> An error occurred. </td><td>  -  </td></tr>
     </table>
     */
    public UpdateRegionRequestBuilder updateRegion(String ID, String subresourceID) throws IllegalArgumentException {
        if (ID == null) throw new IllegalArgumentException("\"ID\" is required but got null");
            

        if (subresourceID == null) throw new IllegalArgumentException("\"subresourceID\" is required but got null");
            

        return new UpdateRegionRequestBuilder(ID, subresourceID);
    }
}
